function [ x1 x2 ] = solve_bi_quadratics( a1, b1, d1, e1, f1, g1, h1, i1, j1, a2, b2, d2, e2, f2, g2, h2, i2, j2 )
%solve_bi_quadratics Solve 2 equations in 2 unknowns
%   x2^2 (ai x1^2 + bi x1 + di) + x2 (ei x1^2 + fi x1 + gi) + (hi x1^2 + ii
%   x1 + ji) = 0, i=1,2
%   Returns 8 values for x1 & x2


% Bezout's method used to get 8th order polynomial in x1.

t1 = (a1 ^ 2);
t2 = (h2 ^ 2);
t4 = (a1 * a2);
t5 = (h1 * h2);
t8 = (a1 * e1);
t9 = (e2 * h2);
t11 = (e2 ^ 2);
t12 = (a1 * t11);
t14 = (a2 ^ 2);
t15 = (h1 ^ 2);
t17 = (e1 ^ 2);
t18 = (a2 * t17);
t20 = (a2 * e1);
t21 = (e2 * h1);
cc8 = -t12 * h1 - t18 * h2 - t1 * t2 - t14 * t15 + t20 * t21 + 2 * t4 * t5 + t8 * t9;
t23 = t1 * h2;
t26 = h1 * i2;
t29 = h2 * i1;
t32 = (a1 * b1);
t35 = (a1 * b2);
t38 = e2 * i2;
t40 = f2 * h2;
t43 = a1 * e2;
t44 = f1 * h2;
t46 = f2 * h1;
t49 = t14 * h1;
t52 = -t12 * i1 - 2 * t49 * i1 - 2 * t23 * i2 - 2 * t32 * t2 + 2 * t4 * t26 + 2 * t4 * t29 + 2 * t35 * t5 + t8 * t38 + t8 * t40 + t43 * t44 - 2 * t43 * t46;
t53 = (a2 * b1);
t56 = (a2 * b2);
t60 = e2 * i1;
t65 = a2 * e2;
t66 = f1 * h1;
t68 = (b1 * e1);
t70 = (b1 * t11);
t72 = (b2 * t17);
t74 = (b2 * e1);
t76 = -t70 * h1 - t72 * h2 - t18 * i2 - 2 * t56 * t15 - 2 * t20 * t44 + t20 * t46 + t20 * t60 + t74 * t21 + 2 * t53 * t5 + t65 * t66 + t68 * t9;
cc7 = t52 + t76;
t79 = i2 ^ 2;
t81 = h1 * j2;
t84 = h2 * j1;
t87 = i1 * i2;
t90 = h2 * i2;
t97 = a1 * d1;
t100 = a1 * d2;
t103 = e2 * j2;
t105 = f2 * i2;
t107 = g2 * h2;
t109 = -2 * t23 * j2 - t1 * t79 + 2 * t100 * t5 + t8 * t103 + t8 * t105 + t8 * t107 - 2 * t97 * t2 + 2 * t35 * t26 + 2 * t35 * t29 - 4 * t32 * t90 + 2 * t4 * t81 + 2 * t4 * t84 + 2 * t4 * t87;
t111 = f1 * i2;
t113 = f2 * i1;
t116 = g1 * h2;
t118 = g2 * h1;
t121 = a1 * f1;
t123 = f2 ^ 2;
t124 = a1 * t123;
t128 = i1 ^ 2;
t134 = h1 * i1;
t137 = a2 * d1;
t140 = a2 * d2;
t143 = -t124 * h1 - t12 * j1 - 2 * t49 * j1 + t43 * t111 - 2 * t43 * t113 + t43 * t116 - 2 * t43 * t118 + t121 * t40 - t14 * t128 - 4 * t56 * t134 + 2 * t137 * t5 - 2 * t140 * t15 + 2 * t53 * t26 + 2 * t53 * t29;
t146 = e2 * j1;
t154 = f1 * i1;
t156 = g1 * h1;
t158 = f1 ^ 2;
t159 = a2 * t158;
t161 = a2 * f1;
t163 = (b1 ^ 2);
t165 = (b1 * b2);
t169 = -t159 * h2 - t18 * j2 - 2 * t20 * t111 + t20 * t113 - 2 * t20 * t116 + t20 * t118 + t20 * t146 + t65 * t154 + t65 * t156 + t161 * t46 - t163 * t2 + 2 * t165 * t5 + t68 * t38;
t172 = b1 * e2;
t176 = (b2 ^ 2);
t183 = b2 * e2;
t185 = d1 * e1;
t187 = d1 * t11;
t189 = d2 * t17;
t191 = d2 * e1;
t193 = -t187 * h1 - t189 * h2 - t70 * i1 - t72 * i2 - t176 * t15 + t172 * t44 - 2 * t172 * t46 + t183 * t66 + t185 * t9 + t191 * t21 + t68 * t40 - 2 * t74 * t44 + t74 * t46 + t74 * t60;
cc6 = t109 + t143 + t169 + t193;
t198 = i1 * j2;
t201 = i2 * j1;
t204 = h2 * j2;
t221 = f2 * j2;
t223 = g2 * i2;
t225 = f1 * j2;
t227 = f2 * j1;
t230 = g1 * i2;
t232 = g2 * i1;
t238 = -2 * t1 * i2 * j2 - t124 * i1 + 2 * t100 * t26 + 2 * t100 * t29 + t121 * t105 + t121 * t107 + 2 * t4 * t198 + 2 * t4 * t201 - 4 * t32 * t204 + t8 * t221 + t8 * t223 + t43 * t225 - 2 * t43 * t227 + t43 * t230 - 2 * t43 * t232 - 2 * t32 * t79 + 2 * t35 * t81 + 2 * t35 * t84 + 2 * t35 * t87 - 4 * t97 * t90;
t239 = a1 * f2;
t252 = h1 * j1;
t269 = f1 * j1;
t271 = g1 * i1;
t277 = -2 * t14 * i1 * j1 - t159 * i2 + t161 * t113 - 2 * t161 * t116 + t239 * t116 - 2 * t239 * t118 - 2 * t56 * t128 - 4 * t140 * t134 + 2 * t137 * t26 + 2 * t137 * t29 - 2 * t20 * t225 + t20 * t227 - 2 * t20 * t230 + t20 * t232 - 4 * t56 * t252 + t65 * t269 + t65 * t271 + 2 * t53 * t81 + 2 * t53 * t84 + 2 * t53 * t87;
t280 = a2 * f2;
t282 = t163 * h2;
t289 = b1 * d1;
t292 = b1 * d2;
t305 = b1 * f1;
t307 = b1 * t123;
t309 = t176 * h1;
t312 = b2 * d1;
t315 = b2 * d2;
t318 = t161 * t118 + t280 * t156 - 2 * t282 * i2 + 2 * t165 * t26 + 2 * t165 * t29 - 2 * t289 * t2 + 2 * t292 * t5 + t68 * t103 + t68 * t105 + t68 * t107 - t70 * j1 + t172 * t111 - 2 * t172 * t113 + t172 * t116 - 2 * t172 * t118 + t305 * t40 - t307 * h1 - 2 * t309 * i1 + 2 * t312 * t5 - 2 * t315 * t15;
t329 = b2 * t158;
t331 = b2 * f1;
t336 = d1 * e2;
t345 = d2 * e2;
t347 = -t329 * h2 - t187 * i1 - t189 * i2 - t72 * j2 - 2 * t74 * t111 + t74 * t113 - 2 * t74 * t116 + t74 * t118 + t74 * t146 + t183 * t154 + t183 * t156 + t185 * t38 + t185 * t40 - 2 * t191 * t44 + t191 * t46 + t191 * t60 + t331 * t46 + t336 * t44 - 2 * t336 * t46 + t345 * t66;
cc5 = t238 + t277 + t318 + t347;
t349 = j2 ^ 2;
t351 = j1 * j2;
t354 = i2 * j2;
t371 = g2 * j2;
t373 = g1 * j2;
t375 = -t1 * t349 + 2 * t100 * t81 + 2 * t100 * t84 + 2 * t100 * t87 + 2 * t35 * t198 + 2 * t35 * t201 - 4 * t97 * t204 - 4 * t32 * t354 + 2 * t4 * t351 + t8 * t371 + t43 * t373 - 2 * t97 * t79;
t376 = g2 * j1;
t385 = a1 * g1;
t387 = g2 ^ 2;
t388 = a1 * t387;
t390 = j1 ^ 2;
t396 = i1 * j1;
t399 = -t388 * h1 - t124 * j1 + t385 * t107 + t121 * t221 + t121 * t223 - t14 * t390 + 2 * t53 * t198 + 2 * t53 * t201 + t239 * t230 - 2 * t239 * t232 - 2 * t43 * t376 - 4 * t56 * t396;
t414 = g1 * j1;
t421 = -t159 * j2 - 2 * t140 * t128 + 2 * t137 * t81 + 2 * t137 * t84 + 2 * t137 * t87 - 4 * t140 * t252 + t161 * t227 - 2 * t161 * t230 + t161 * t232 - 2 * t20 * t373 + t20 * t376 + t65 * t414;
t423 = g1 ^ 2;
t424 = a2 * t423;
t426 = a2 * g1;
t444 = -t424 * h2 - 2 * t282 * j2 + t426 * t118 - t163 * t79 + 2 * t165 * t81 + 2 * t165 * t84 + 2 * t165 * t87 + t68 * t221 + 2 * t292 * t26 + t280 * t271 - 4 * t289 * t90 + 2 * t292 * t29;
t457 = b1 * f2;
t464 = -t307 * i1 - 2 * t309 * j1 + t305 * t105 + t305 * t107 + t457 * t116 - 2 * t457 * t118 - t176 * t128 + t172 * t225 - 2 * t172 * t227 + t172 * t230 - 2 * t172 * t232 + t68 * t223;
t483 = -t329 * i2 + t331 * t113 - 2 * t331 * t116 - 4 * t315 * t134 + t183 * t269 + t183 * t271 - 2 * t74 * t225 + t74 * t227 - 2 * t74 * t230 + t74 * t232 + 2 * t312 * t26 + 2 * t312 * t29;
t486 = b2 * f2;
t488 = d1 ^ 2;
t490 = d1 * d2;
t503 = -t187 * j1 + t185 * t103 + t185 * t105 + t185 * t107 + t336 * t111 - 2 * t336 * t113 + t336 * t116 + t331 * t118 - 2 * t336 * t118 + t486 * t156 - t488 * t2 + 2 * t490 * t5;
t504 = d1 * f1;
t506 = d1 * t123;
t508 = d2 ^ 2;
t520 = d2 * t158;
t522 = d2 * f1;
t524 = -t506 * h1 - t520 * h2 - t189 * j2 - 2 * t191 * t111 + t191 * t113 - 2 * t191 * t116 + t191 * t118 + t191 * t146 - t508 * t15 + t345 * t154 + t345 * t156 + t504 * t40 + t522 * t46;
cc4 = t375 + t399 + t421 + t444 + t464 + t483 + t503 + t524;
t559 = -t388 * i1 - t424 * i2 + 2 * t100 * t198 + 2 * t100 * t201 + t121 * t371 + 2 * t137 * t198 + 2 * t137 * t201 - 4 * t140 * t396 - 2 * t161 * t373 + t161 * t376 + t385 * t223 + t426 * t232 + t239 * t373 - 2 * t239 * t376 + t280 * t414 - 2 * t32 * t349 + 2 * t35 * t351 + 2 * t53 * t351 - 4 * t97 * t354 - 2 * t56 * t390;
t587 = b1 * g1;
t589 = b1 * t387;
t596 = -2 * t163 * i2 * j2 + 2 * t165 * t198 + 2 * t165 * t201 - 4 * t289 * t204 - 2 * t289 * t79 + 2 * t292 * t81 + 2 * t292 * t84 + 2 * t292 * t87 + t68 * t371 + t172 * t373 - 2 * t172 * t376 + t305 * t221 + t305 * t223 - t307 * j1 + t457 * t230 - 2 * t457 * t232 + t587 * t107 - t589 * h1 - 2 * t176 * i1 * j1 + 2 * t312 * t81;
t616 = b2 * t423;
t618 = b2 * g1;
t620 = t488 * h2;
t630 = 2 * t312 * t84 + 2 * t312 * t87 - 4 * t315 * t252 - 2 * t315 * t128 - 2 * t74 * t373 + t74 * t376 + t183 * t414 - t329 * j2 + t331 * t227 - 2 * t331 * t230 + t331 * t232 + t486 * t271 - t616 * h2 + t618 * t118 - 2 * t620 * i2 + 2 * t490 * t26 + 2 * t490 * t29 + t185 * t221 + t185 * t223 + t336 * t225;
t639 = d1 * f2;
t643 = t508 * h1;
t659 = d2 * f2;
t661 = -t506 * i1 - 2 * t643 * i1 - t520 * i2 + t504 * t105 + t504 * t107 + t522 * t113 - 2 * t522 * t116 + t639 * t116 + t522 * t118 - 2 * t639 * t118 + t659 * t156 - 2 * t191 * t225 + t191 * t227 - 2 * t191 * t230 + t191 * t232 - 2 * t336 * t227 + t336 * t230 - 2 * t336 * t232 + t345 * t269 + t345 * t271;
cc3 = t559 + t596 + t630 + t661;
t684 = -t388 * j1 - t424 * j2 + 2 * t100 * t351 + 2 * t137 * t351 - 2 * t140 * t390 - t163 * t349 + 2 * t165 * t351 + 2 * t292 * t198 + 2 * t292 * t201 - 4 * t289 * t354 - 2 * t97 * t349 + t385 * t371 + t426 * t376;
t704 = -t589 * i1 - t616 * i2 - t176 * t390 + 2 * t312 * t198 + 2 * t312 * t201 + t587 * t223 + t618 * t232 + t305 * t371 - 4 * t315 * t396 - 2 * t331 * t373 + t331 * t376 + t457 * t373 - 2 * t457 * t376 + t486 * t414;
t725 = -t506 * j1 - 2 * t620 * j2 + t185 * t371 + t504 * t221 + t504 * t223 + t639 * t230 - 2 * t639 * t232 + t336 * t373 - 2 * t336 * t376 - t488 * t79 + 2 * t490 * t81 + 2 * t490 * t84 + 2 * t490 * t87;
t726 = d1 * g1;
t728 = d1 * t387;
t743 = d2 * t423;
t745 = d2 * g1;
t747 = -t728 * h1 - t743 * h2 - 2 * t643 * j1 - t520 * j2 + t726 * t107 + t745 * t118 - t508 * t128 - 2 * t191 * t373 + t191 * t376 + t522 * t227 - 2 * t522 * t230 + t522 * t232 + t659 * t271 + t345 * t414;
cc2 = t684 + t704 + t725 + t747;
t768 = -2 * t488 * i2 * j2 - t589 * j1 - t616 * j2 + 2 * t490 * t198 + 2 * t490 * t201 - 2 * t289 * t349 + 2 * t292 * t351 + 2 * t312 * t351 - 2 * t315 * t390 + t587 * t371 + t618 * t376;
t784 = -2 * t508 * i1 * j1 - t728 * i1 - t743 * i2 + t726 * t223 + t745 * t232 + t504 * t371 - 2 * t522 * t373 + t639 * t373 + t522 * t376 - 2 * t639 * t376 + t659 * t414;
cc1 = t768 + t784;
cc0 = -t728 * j1 - t743 * j2 - t488 * t349 + 2 * t490 * t351 + t726 * t371 + t745 * t376 - t508 * t390;

mypoly = [cc8 cc7 cc6 cc5 cc4 cc3 cc2 cc1 cc0];
x1 = roots(mypoly) ;

for i=1:8
    L1 = a1*x1(i)^2 + b1*x1(i) + d1 ;
    M1 = e1*x1(i)^2 + f1*x1(i) + g1 ;
    N1 = h1*x1(i)^2 + i1*x1(i) + j1 ;
    L2 = a2*x1(i)^2 + b2*x1(i) + d2 ;
    M2 = e2*x1(i)^2 + f2*x1(i) + g2 ;
    N2 = h2*x1(i)^2 + i2*x1(i) + j2 ;
    
    MN = M1*N2 - M2*N1 ;
    LN = L1*N2 - L2*N1 ;
    x2(i) = -MN / LN ;
end
    

end

